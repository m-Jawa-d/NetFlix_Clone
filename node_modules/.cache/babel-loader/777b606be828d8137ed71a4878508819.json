{"ast":null,"code":"var _jsxFileName = \"D:\\\\WEB--DEVELOPMENT\\\\REACT\\\\Netflix_Clone\\\\netflix-clone\\\\src\\\\Row.jsx\",\n    _s = $RefreshSig$();\n\nimport { React, useEffect, useState } from 'react';\nimport axios from 'axios';\nimport YouTube from 'react-youtube';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst baseurl = \"https://image.tmdb.org/t/p/original\";\n\nfunction Row({\n  title,\n  url,\n  isLargerRow\n}) {\n  _s();\n\n  // var jsonRes;\n  const [movie, upMovie] = useState([]);\n  useEffect(() => {\n    const func = async () => {\n      // const api_Key=`b1bcd518764c9ced91d1c21adad8eb44`;\n      const res = await axios.get(`${url}`); // const jsonRes = res.json();\n      // console.log(res);\n\n      upMovie(res.data.results); // return jsonRes;\n    };\n\n    func();\n  }, [url]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row_main\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"row_heading\",\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 12\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row_inner\",\n        children: movie.map(val => {\n          return /*#__PURE__*/_jsxDEV(\"img\", {\n            onClick: console.log('uff'),\n            className: isLargerRow ? 'poster_img' : 'poster_path',\n            src: `${baseurl}${isLargerRow ? val.poster_path : val.backdrop_path}`,\n            alt: val.original_title\n          }, val.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 24\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 12\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(YouTube, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Row, \"F04ZRFqHroOV08PN6ly0p3IfiMY=\");\n\n_c = Row;\nexport default Row; // https://image.tmdb.org/t/p/orignal/pci1ArYW7oJ2eyTo2NMYEKHHiCP.jpg\n\nvar _c;\n\n$RefreshReg$(_c, \"Row\");","map":{"version":3,"sources":["D:/WEB--DEVELOPMENT/REACT/Netflix_Clone/netflix-clone/src/Row.jsx"],"names":["React","useEffect","useState","axios","YouTube","baseurl","Row","title","url","isLargerRow","movie","upMovie","func","res","get","data","results","map","val","console","log","poster_path","backdrop_path","original_title","id"],"mappings":";;;AAAA,SAAQA,KAAR,EAAcC,SAAd,EAAyBC,QAAzB,QAAwC,OAAxC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,eAApB;;;AAEA,MAAMC,OAAO,GAAC,qCAAd;;AAEA,SAASC,GAAT,CAAa;AAACC,EAAAA,KAAD;AAAQC,EAAAA,GAAR;AAAaC,EAAAA;AAAb,CAAb,EAAwC;AAAA;;AACpC;AACA,QAAM,CAACC,KAAD,EAAQC,OAAR,IAAiBT,QAAQ,CAAC,EAAD,CAA/B;AACAD,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMW,IAAI,GAAG,YAAW;AACpB;AACA,YAAMC,GAAG,GAAG,MAAMV,KAAK,CAACW,GAAN,CAAW,GAAEN,GAAI,EAAjB,CAAlB,CAFoB,CAGpB;AACA;;AACAG,MAAAA,OAAO,CAACE,GAAG,CAACE,IAAJ,CAASC,OAAV,CAAP,CALoB,CAMpB;AACD,KAPH;;AAQEJ,IAAAA,IAAI;AACT,GAVQ,EAUN,CAACJ,GAAD,CAVM,CAAT;AAaA,sBACI;AAAA,4BACA;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA,8BACG;AAAI,QAAA,SAAS,EAAC,aAAd;AAAA,kBAA6BD;AAA7B;AAAA;AAAA;AAAA;AAAA,cADH,eAEG;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,kBACCG,KAAK,CAACO,GAAN,CAAWC,GAAD,IAAO;AACd,8BAAQ;AAAK,YAAA,OAAO,EAAEC,OAAO,CAACC,GAAR,CAAY,KAAZ,CAAd;AAA+C,YAAA,SAAS,EAAEX,WAAW,GAAG,YAAH,GAAiB,aAAtF;AAAqG,YAAA,GAAG,EAAG,GAAEJ,OAAQ,GAAEI,WAAW,GAAES,GAAG,CAACG,WAAN,GAAoBH,GAAG,CAACI,aAAc,EAAxK;AAA2K,YAAA,GAAG,EAAEJ,GAAG,CAACK;AAApL,aAAuCL,GAAG,CAACM,EAA3C;AAAA;AAAA;AAAA;AAAA,kBAAR;AACH,SAFA;AADD;AAAA;AAAA;AAAA;AAAA,cAFH;AAAA;AAAA;AAAA;AAAA;AAAA,YADA,eAUJ;AAAA,6BACA,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,YAVI;AAAA,kBADJ;AAgBH;;GAhCQlB,G;;KAAAA,G;AAkCT,eAAeA,GAAf,C,CACA","sourcesContent":["import {React,useEffect, useState} from 'react'\r\nimport axios from 'axios';\r\nimport YouTube from 'react-youtube';\r\n\r\nconst baseurl=\"https://image.tmdb.org/t/p/original\";\r\n\r\nfunction Row({title, url, isLargerRow}) {\r\n    // var jsonRes;\r\n    const [movie, upMovie]=useState([]);\r\n    useEffect(() => {\r\n        const func = async() => {\r\n            // const api_Key=`b1bcd518764c9ced91d1c21adad8eb44`;\r\n            const res = await axios.get(`${url}`)\r\n            // const jsonRes = res.json();\r\n            // console.log(res);\r\n            upMovie(res.data.results)\r\n            // return jsonRes;\r\n          }\r\n          func(); \r\n    }, [url])\r\n    \r\n    \r\n    return (\r\n        <>\r\n        <div className='row_main'>\r\n           <h2 className='row_heading'>{title}</h2>\r\n           <div className=\"row_inner\">\r\n           {movie.map((val)=>{\r\n               return (<img onClick={console.log('uff')} key={val.id} className={isLargerRow ? 'poster_img': 'poster_path'} src={`${baseurl}${isLargerRow? val.poster_path : val.backdrop_path}`} alt={val.original_title}/>);\r\n           })}\r\n               \r\n           </div> \r\n        </div>\r\n    <div>\r\n    <YouTube />\r\n    </div>\r\n    </>\r\n    )\r\n}\r\n\r\nexport default Row\r\n// https://image.tmdb.org/t/p/orignal/pci1ArYW7oJ2eyTo2NMYEKHHiCP.jpg\r\n"]},"metadata":{},"sourceType":"module"}