{"ast":null,"code":"import _regeneratorRuntime from\"D:/Netflix_Clone/netflix-clone/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"D:/Netflix_Clone/netflix-clone/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"D:/Netflix_Clone/netflix-clone/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{React,useEffect,useState}from'react';import axios from'axios';import YouTube from'react-youtube';import MTrailer from'movie-trailer';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var baseurl=\"https://image.tmdb.org/t/p/original\";function Row(_ref){var title=_ref.title,url=_ref.url,isLargerRow=_ref.isLargerRow;var _useState=useState(),_useState2=_slicedToArray(_useState,2),trailerUrl=_useState2[0],upTrailerUrl=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),movie=_useState4[0],upMovie=_useState4[1];useEffect(function(){var func=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var res;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return axios.get(\"\".concat(url));case 2:res=_context.sent;upMovie(res.data.results);// return jsonRes;\ncase 4:case\"end\":return _context.stop();}}},_callee);}));return function func(){return _ref2.apply(this,arguments);};}();func();},[url]);var opts={height:'390',width:'100%',playerVars:{// https://developers.google.com/youtube/player_parameters\nautoplay:1}};var imgTrailer=function imgTrailer(val){if(trailerUrl){upTrailerUrl('');}else{MTrailer((val===null||val===void 0?void 0:val.name)||(val===null||val===void 0?void 0:val.title)||(val===null||val===void 0?void 0:val.orignal_name)||'').then(function(url){var urlParams=new URLSearchParams(new URL(url).search);upTrailerUrl(urlParams.get(\"v\"));}).catch(function(error){console.log(error);});}};return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"row_main\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"row_heading\",children:title}),/*#__PURE__*/_jsx(\"div\",{className:\"row_inner\",children:movie.map(function(val){return/*#__PURE__*/_jsxs(\"div\",{className:\"movies_name\",children:[/*#__PURE__*/_jsx(\"img\",{onClick:function onClick(){imgTrailer(val);},className:isLargerRow?'poster_img':'poster_path',src:\"\".concat(baseurl).concat(isLargerRow?val.poster_path:val.backdrop_path),alt:val.original_title},val.id),/*#__PURE__*/_jsx(\"p\",{children:isLargerRow?null:(val===null||val===void 0?void 0:val.name)||(val===null||val===void 0?void 0:val.title)||(val===null||val===void 0?void 0:val.orignal_name)})]});})})]}),/*#__PURE__*/_jsx(\"div\",{children:trailerUrl&&/*#__PURE__*/_jsx(YouTube,{videoId:trailerUrl,opts:opts})})]});}export default Row;// https://image.tmdb.org/t/p/orignal/pci1ArYW7oJ2eyTo2NMYEKHHiCP.jpg","map":{"version":3,"sources":["D:/Netflix_Clone/netflix-clone/src/Row.jsx"],"names":["React","useEffect","useState","axios","YouTube","MTrailer","baseurl","Row","title","url","isLargerRow","trailerUrl","upTrailerUrl","movie","upMovie","func","get","res","data","results","opts","height","width","playerVars","autoplay","imgTrailer","val","name","orignal_name","then","urlParams","URLSearchParams","URL","search","catch","error","console","log","map","poster_path","backdrop_path","original_title","id"],"mappings":"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","sourcesContent":["import { React, useEffect, useState } from 'react'\r\nimport axios from 'axios';\r\nimport YouTube from 'react-youtube';\r\nimport MTrailer from 'movie-trailer';\r\n\r\nconst baseurl = \"https://image.tmdb.org/t/p/original\";\r\n\r\nfunction Row({ title, url, isLargerRow }) {\r\n  const [trailerUrl,  upTrailerUrl]=useState();\r\n  const [movie, upMovie] = useState([]);\r\n  useEffect(() => {\r\n    const func = async () => {\r\n      // const api_Key=`b1bcd518764c9ced91d1c21adad8eb44`;\r\n      const res = await axios.get(`${url}`)\r\n      upMovie(res.data.results)\r\n      // return jsonRes;\r\n    }\r\n    func();\r\n  }, [url]);\r\n\r\n  const opts = {\r\n    height: '390',\r\n    width: '100%',\r\n    playerVars: {\r\n      // https://developers.google.com/youtube/player_parameters\r\n      autoplay: 1,\r\n    },\r\n  };\r\n  const imgTrailer =(val)=>{\r\n    if(trailerUrl){\r\n      upTrailerUrl('')\r\n    }\r\n    else{\r\n      MTrailer(val?.name || val?.title || val?.orignal_name||'')\r\n      .then((url)=>{\r\n        const urlParams=new URLSearchParams(new URL(url).search);\r\n        upTrailerUrl(urlParams.get(\"v\"));\r\n      })\r\n      .catch((error)=>{console.log(error)})\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className='row_main'>\r\n        <h2 className='row_heading'>{title}</h2>\r\n        <div className=\"row_inner\">\r\n          {movie.map((val) => {\r\n            return (<div className='movies_name'>\r\n            <img onClick={()=>{imgTrailer(val)}} key={val.id} className={isLargerRow ? 'poster_img' : 'poster_path'} src={`${baseurl}${isLargerRow ? val.poster_path : val.backdrop_path}`} alt={val.original_title} />\r\n            <p>{isLargerRow? null : val?.name || val?.title || val?.orignal_name}</p></div>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n      <div>\r\n        {trailerUrl && <YouTube videoId={trailerUrl} opts={opts} />}\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Row;\r\n// https://image.tmdb.org/t/p/orignal/pci1ArYW7oJ2eyTo2NMYEKHHiCP.jpg\r\n"]},"metadata":{},"sourceType":"module"}